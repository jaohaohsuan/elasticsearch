---
apiVersion: v1
kind: Service
metadata:
  name: {{ printf "%s-data" .Values.service.name | trunc 63 }}
  labels:
{{ include "labels" . | indent 4 }}      
spec:
  ports:
  - port: 9300
    name: transport
  clusterIP: None
  selector:
{{ include "labels.data" . | indent 4 }}      
---
apiVersion: apps/v1beta1
kind: StatefulSet
metadata:
  name: {{ printf "%s-data" .Values.service.name | trunc 63 }}
  labels:
{{ include "labels" . | indent 4 }}      
spec:
  serviceName: {{ printf "%s-data" .Values.service.name | trunc 63 }}
  replicas: {{ .Values.replicaCount.data }}
  volumeClaimTemplates:
  - metadata:
      name: storage
      annotations:
        volume.beta.kubernetes.io/storage-class: {{ .Values.volumes.data.storageClass }}
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: {{ .Values.volumes.data.size }}
  template:
    metadata:
      labels:
{{ include "labels.data" . | indent 8 }}      
      annotations:
        pod.beta.kubernetes.io/init-containers: |-
{{ include "initContainer" . | indent 10 }}    
    spec:
      containers:
      - name: es-data
        securityContext:
          privileged: true
          capabilities:
            add:
              - IPC_LOCK
              - SYS_RESOURCE
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        ports:
        - containerPort: 9300
        env:
        - name: ES_HEAP_SIZE
          value: {{ .Values.heapSize.data }}
        args:
        - "run.sh"
        - "elasticsearch"
        - {{ printf "-Dcluster.name=%s" .Values.config.cluster.name | quote }} 
        - "-Dhttp.cors.enabled=true"
        - "-Dbootstrap.mlockall=true"
        - "-Dnetwork.host=0.0.0.0"
        - "-Dnode.master=false"
        - "-Dnode.data=true"
        - "-Dhttp.enabled=false"
        - {{ printf "-Ddiscovery.zen.ping.unicast.hosts=%s-discovery.default.svc.cluster.local" .Values.service.name | quote }}
        volumeMounts:
        - name: storage
          mountPath: {{ .Values.volumes.data.mountPath }}
